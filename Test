--[[
    Skrip Skedz Hub - Versi PlatoBoost dengan UI Custom (Crash Fix V2)
    Menggabungkan sistem kunci PlatoBoost ASLI dengan UI modern....
]]

--====================================================================================================================--
--[ Loading UI Function (Modern) ]
--====================================================================================================================--

if game.CoreGui:FindFirstChild('SkedzHubLoader') then
    game.CoreGui:FindFirstChild('SkedzHubLoader'):Destroy()
end

local function createLoadingUI()
    local TweenService = game:GetService("TweenService")

    local LoaderUI = Instance.new("ScreenGui")
    LoaderUI.Name = "SkedzHubLoader"
    LoaderUI.Parent = game.CoreGui
    LoaderUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    LoaderUI.IgnoreGuiInset = true

    local Background = Instance.new("Frame")
    Background.Name = "Background"
    Background.Parent = LoaderUI
    Background.BackgroundColor3 = Color3.fromRGB(15, 15, 17)
    Background.BorderSizePixel = 0
    Background.Size = UDim2.new(1, 0, 1, 0)
    Background.BackgroundTransparency = 1

    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Parent = Background
    Main.BackgroundColor3 = Color3.fromRGB(28, 28, 30)
    Main.BorderSizePixel = 0
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 300, 0, 100)
    
    local UICorner_Main = Instance.new("UICorner")
    UICorner_Main.CornerRadius = UDim.new(0, 12)
    UICorner_Main.Parent = Main

    local UIStroke_Main = Instance.new("UIStroke")
    UIStroke_Main.Color = Color3.fromRGB(60, 60, 60)
    UIStroke_Main.Thickness = 1
    UIStroke_Main.Parent = Main

    local SkedzHub = Instance.new("TextLabel")
    SkedzHub.Name = "SkedzHub"
    SkedzHub.Parent = Main
    SkedzHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SkedzHub.BackgroundTransparency = 1
    SkedzHub.Position = UDim2.new(0, 20, 0, 15)
    SkedzHub.Size = UDim2.new(1, -40, 0, 30)
    SkedzHub.Font = Enum.Font.GothamBold
    SkedzHub.Text = "Skedz Hub"
    SkedzHub.TextColor3 = Color3.fromRGB(255, 255, 255)
    SkedzHub.TextSize = 20
    SkedzHub.TextXAlignment = Enum.TextXAlignment.Left

    local StatusText = Instance.new("TextLabel")
    StatusText.Name = "StatusText"
    StatusText.Parent = Main
    StatusText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    StatusText.BackgroundTransparency = 1
    StatusText.Position = UDim2.new(1, -20, 0, 15)
    StatusText.Size = UDim2.new(0.5, 0, 0, 30)
    StatusText.AnchorPoint = Vector2.new(1, 0)
    StatusText.Font = Enum.Font.Gotham
    StatusText.Text = "Initializing..."
    StatusText.TextColor3 = Color3.fromRGB(180, 180, 180)
    StatusText.TextSize = 16
    StatusText.TextXAlignment = Enum.TextXAlignment.Right

    local ProgressBarBG = Instance.new("Frame")
    ProgressBarBG.Name = "ProgressBarBG"
    ProgressBarBG.Parent = Main
    ProgressBarBG.BackgroundColor3 = Color3.fromRGB(45, 45, 47)
    ProgressBarBG.BorderSizePixel = 0
    ProgressBarBG.Position = UDim2.new(0.5, 0, 0, 60)
    ProgressBarBG.Size = UDim2.new(1, -40, 0, 8)
    ProgressBarBG.AnchorPoint = Vector2.new(0.5, 0)
    
    local UICorner_BarBG = Instance.new("UICorner")
    UICorner_BarBG.CornerRadius = UDim.new(0, 4)
    UICorner_BarBG.Parent = ProgressBarBG

    local ProgressBarFill = Instance.new("Frame")
    ProgressBarFill.Name = "ProgressBarFill"
    ProgressBarFill.Parent = ProgressBarBG
    ProgressBarFill.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
    ProgressBarFill.BorderSizePixel = 0
    ProgressBarFill.Size = UDim2.new(0, 0, 1, 0)
    
    local UICorner_BarFill = Instance.new("UICorner")
    UICorner_BarFill.CornerRadius = UDim.new(0, 4)
    UICorner_BarFill.Parent = ProgressBarFill

    local fadeInTween = TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
    TweenService:Create(Background, fadeInTween, {BackgroundTransparency = 0.2}):Play()
    
    local loadingManager = {}
    
    function loadingManager:SetStatus(text)
        StatusText.Text = text
    end
    
    function loadingManager:RunProgressBar(duration)
        local progressTweenInfo = TweenInfo.new(duration or 1.5, Enum.EasingStyle.Linear)
        local progressTween = TweenService:Create(ProgressBarFill, progressTweenInfo, {Size = UDim2.new(1, 0, 1, 0)})
        progressTween:Play()
        return progressTween
    end

    function loadingManager:Destroy()
        local fadeOutTween = TweenInfo.new(0.4, Enum.EasingStyle.Quint, Enum.EasingDirection.In)
        TweenService:Create(Background, fadeOutTween, {BackgroundTransparency = 1}):Play()
        task.wait(0.4)
        LoaderUI:Destroy()
    end

    return loadingManager
end

local loadingManager = createLoadingUI()

--====================================================================================================================--
--[ Core Definitions & Hub Scripts ]
--====================================================================================================================--

local HubScripts = {}
HubScripts[2413927524] = function() print("test") end

local function loadHubScript()
    local PlaceId = game.PlaceId
    if HubScripts[PlaceId] then
        pcall(HubScripts[PlaceId])
    else
        warn("Skedz Hub: Game Not Supported!")
    end
end

local gameConfigUrl = "https://raw.githubusercontent.com/Frlxz/Source/main/gmelst"
local gameConfig
pcall(function() gameConfig = loadstring(game:HttpGet(gameConfigUrl))() end)
if not gameConfig then
    loadingManager:Destroy()
    warn("Skedz Hub Error: Failed to fetch game configuration.")
    return
end

-- [DIPERBAIKI] Definisi fungsi saveKey dipindahkan ke atas
local keyFolder = "Skedz Hub/"
local keyPath = keyFolder .. "Key.txt"
local function saveKey(validKey)
    if writefile and makefolder and isfolder then
        if not isfolder(keyFolder) then makefolder(keyFolder) end
        writefile(keyPath, validKey)
    end
end

--====================================================================================================================--
--[ PlatoBoost Library & Configuration (DARI SKRIP ASLI) ]
--====================================================================================================================--

local keyServices = {
    Linkvertise = {
        service = 2908,
        secret = "0e2bc73d-c745-4571-987d-a6b1a77fdb98"
    },
    Lootlabs = {
        service = 4757,
        secret = "7cc33cbe-2937-4ba6-b494-928e050b7fe3"
    }
}
local useNonce = true;

local onMessage = function(message)
    warn("PlatoBoost Message:", message)
end;

repeat task.wait(1) until game:IsLoaded() or game.Players.LocalPlayer;

local requestSending = false;
local fSetClipboard, fRequest, fStringChar, fToString, fStringSub, fOsTime, fMathRandom, fMathFloor, fGetHwid = setclipboard or toclipboard, request or http_request, string.char, tostring, string.sub, os.time, math.random, math.floor, gethwid or function() return game:GetService("Players").LocalPlayer.UserId end
local cachedLinks = {}
local HttpService = game:GetService("HttpService")

function lEncode(data) return HttpService:JSONEncode(data) end
function lDecode(data) return HttpService:JSONDecode(data) end
local function lDigest(input)
    local inputStr = tostring(input)
    local hash = {}
    for i = 1, #inputStr do table.insert(hash, string.byte(inputStr, i)) end
    local hashHex = ""
    for _, byte in ipairs(hash) do hashHex = hashHex .. string.format("%02x", byte) end
    return hashHex
end

local host = "https://api.platoboost.com";
pcall(function()
    local hostResponse = fRequest({ Url = host .. "/public/connectivity", Method = "GET" });
    if hostResponse.StatusCode ~= 200 or hostResponse.StatusCode ~= 429 then
        host = "https://api.platoboost.net";
    end
end)

function cacheLink(config)
    local serviceId = config.service
    if cachedLinks[serviceId] and cachedLinks[serviceId].time + (10 * 60) > fOsTime() then
        return true, cachedLinks[serviceId].link
    end
    local response = fRequest({
        Url = host .. "/public/start",
        Method = "POST",
        Body = lEncode({ service = serviceId, identifier = lDigest(fGetHwid()) }),
        Headers = { ["Content-Type"] = "application/json" }
    });
    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);
        if decoded.success == true then
            cachedLinks[serviceId] = { link = decoded.data.url, time = fOsTime() }
            return true, decoded.data.url;
        else
            onMessage(decoded.message);
            return false
        end
    else
        onMessage("Failed to cache link for service " .. serviceId);
        return false;
    end
end

local generateNonce = function()
    local str = ""
    for _ = 1, 16 do str = str .. fStringChar(fMathFloor(fMathRandom() * (122 - 97 + 1)) + 97) end
    return str
end

local function copyLink(config)
    local success, link = cacheLink(config);
    if success then
        fSetClipboard(link);
        onMessage("Link copied to clipboard.")
    end
end

local function redeemKey(key, config)
    local nonce = generateNonce();
    local endpoint = host .. "/public/redeem/" .. fToString(config.service);
    local body = { identifier = lDigest(fGetHwid()), key = key }
    if useNonce then body.nonce = nonce; end
    local response = fRequest({
        Url = endpoint, Method = "POST", Body = lEncode(body), Headers = { ["Content-Type"] = "application/json" }
    });
    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);
        if decoded.success == true and decoded.data.valid == true then
            if useNonce then
                return decoded.data.hash == lDigest("true" .. "-" .. nonce .. "-" .. config.secret)
            else
                return true;
            end
        else
            onMessage(decoded.message or "key is invalid.");
            return false;
        end
    else
        onMessage("server returned an invalid status code: " .. response.StatusCode);
        return false;
    end
end

local function verifyKey(key, config)
    if requestSending then return false end
    requestSending = true
    local nonce = generateNonce();
    local endpoint = host .. "/public/whitelist/" .. fToString(config.service) .. "?identifier=" .. lDigest(fGetHwid()) .. "&key=" .. key;
    if useNonce then endpoint = endpoint .. "&nonce=" .. nonce; end
    local response = fRequest({ Url = endpoint, Method = "GET" });
    requestSending = false;
    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);
        if decoded.success == true then
            if decoded.data.valid == true then
                if useNonce then
                    return true;
                else
                    return true;
                end
            else
                if fStringSub(key, 1, 5) == "FREE_" or fStringSub(key, 1, 4) == "KEY_" then
                    return redeemKey(key, config);
                else
                    return false;
                end
            end
        else
            return false;
        end
    else
        return false;
    end
end

--====================================================================================================================--
--[ Custom Key System UI (PlatoBoost Version) ]
--====================================================================================================================--

local function createKeySystemUI()
    if game.CoreGui:FindFirstChild("SkedzKeySystem") then
        game.CoreGui.SkedzKeySystem:Destroy()
    end

    local TweenService = game:GetService("TweenService")
    local buttonCooldown = false
    local notificationDebounce = nil

    local KeySystemUI = Instance.new("ScreenGui")
    KeySystemUI.Name = "SkedzKeySystem"
    KeySystemUI.Parent = game.CoreGui
    KeySystemUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = KeySystemUI
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.Size = UDim2.new(0, 340, 0, 260)
    MainFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 30)
    MainFrame.BackgroundTransparency = 1
    MainFrame.ClipsDescendants = true
    
    local UICorner_Main = Instance.new("UICorner")
    UICorner_Main.CornerRadius = UDim.new(0, 16)
    UICorner_Main.Parent = MainFrame

    local UIStroke_Main = Instance.new("UIStroke")
    UIStroke_Main.Color = Color3.fromRGB(200, 200, 200)
    UIStroke_Main.Thickness = 1.5
    UIStroke_Main.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke_Main.Parent = MainFrame

    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Parent = MainFrame
    Title.Size = UDim2.new(1, 0, 0, 45)
    Title.BackgroundTransparency = 1
    Title.Font = Enum.Font.GothamBold
    Title.Text = "Skedz Hub Key System"
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 22

    local KeyInput = Instance.new("TextBox")
    KeyInput.Name = "KeyInput"
    KeyInput.Parent = MainFrame
    KeyInput.AnchorPoint = Vector2.new(0.5, 0)
    KeyInput.Position = UDim2.new(0.5, 0, 0, 48)
    KeyInput.Size = UDim2.new(0.9, 0, 0, 42)
    KeyInput.BackgroundColor3 = Color3.fromRGB(44, 44, 46)
    KeyInput.Font = Enum.Font.Gotham
    KeyInput.PlaceholderText = "Paste your license here..."
    KeyInput.PlaceholderColor3 = Color3.fromRGB(140, 140, 140)
    KeyInput.Text = ""
    KeyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    KeyInput.TextSize = 14
    KeyInput.ClearTextOnFocus = false

    local UICorner_Input = Instance.new("UICorner")
    UICorner_Input.CornerRadius = UDim.new(0, 10)
    UICorner_Input.Parent = KeyInput
    
    local UIStroke_Input = Instance.new("UIStroke")
    UIStroke_Input.Color = Color3.fromRGB(65, 65, 65)
    UIStroke_Input.Thickness = 1
    UIStroke_Input.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke_Input.Parent = KeyInput
    
    local function showUINotification(message, isError)
        local originalPlaceholder = "Place your license here..."
        local originalColor = Color3.fromRGB(140, 140, 140)
        local currentDebounce = os.clock()
        notificationDebounce = currentDebounce
        KeyInput.PlaceholderText = message
        KeyInput.PlaceholderColor3 = isError and Color3.fromRGB(255, 90, 90) or Color3.fromRGB(170, 255, 170)
        task.delay(3, function()
            if notificationDebounce == currentDebounce then
                 KeyInput.PlaceholderText = originalPlaceholder
                 KeyInput.PlaceholderColor3 = originalColor
            end
        end)
    end
    
    onMessage = function(message)
        showUINotification(message, true)
    end

    local SubmitButton = Instance.new("TextButton")
    SubmitButton.Name = "SubmitButton"
    SubmitButton.Parent = MainFrame
    SubmitButton.AnchorPoint = Vector2.new(0.5, 0)
    SubmitButton.Position = UDim2.new(0.5, 0, 0, 100)
    SubmitButton.Size = UDim2.new(0.9, 0, 0, 40)
    SubmitButton.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
    SubmitButton.Font = Enum.Font.GothamBold
    SubmitButton.Text = "Submit Key"
    SubmitButton.TextColor3 = Color3.fromRGB(10, 10, 10)
    SubmitButton.TextSize = 16
    
    local UICorner_Submit = Instance.new("UICorner")
    UICorner_Submit.CornerRadius = UDim.new(0, 10)
    UICorner_Submit.Parent = SubmitButton
    
    local Divider = Instance.new("Frame")
    Divider.Name = "Divider"
    Divider.Parent = MainFrame
    Divider.AnchorPoint = Vector2.new(0.5, 0)
    Divider.Position = UDim2.new(0.5, 0, 0, 150)
    Divider.Size = UDim2.new(0.9, 0, 0, 1)
    Divider.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
    Divider.BorderSizePixel = 0

    local GetKeyLinkvertise = Instance.new("TextButton")
    GetKeyLinkvertise.Name = "GetKeyLinkvertise"
    GetKeyLinkvertise.Parent = MainFrame
    GetKeyLinkvertise.Position = UDim2.new(0.05, 0, 0, 162)
    GetKeyLinkvertise.Size = UDim2.new(0.9, 0, 0, 40)
    GetKeyLinkvertise.BackgroundColor3 = Color3.fromRGB(44, 44, 46)
    GetKeyLinkvertise.Font = Enum.Font.Gotham
    GetKeyLinkvertise.Text = "Get 24 Hours Key (Linkvertise)"
    GetKeyLinkvertise.TextColor3 = Color3.fromRGB(230, 230, 230)
    GetKeyLinkvertise.TextSize = 14
    
    local UICorner_Get1 = Instance.new("UICorner")
    UICorner_Get1.CornerRadius = UDim.new(0, 10)
    UICorner_Get1.Parent = GetKeyLinkvertise

    local GetKeyLootlabs = Instance.new("TextButton")
    GetKeyLootlabs.Name = "GetKeyLootlabs"
    GetKeyLootlabs.Parent = MainFrame
    GetKeyLootlabs.Position = UDim2.new(0.05, 0, 0, 212)
    GetKeyLootlabs.Size = UDim2.new(0.9, 0, 0, 40)
    GetKeyLootlabs.BackgroundColor3 = Color3.fromRGB(44, 44, 46)
    GetKeyLootlabs.Font = Enum.Font.Gotham
    GetKeyLootlabs.Text = "Get 6 Hours Key (Lootlabs)"
    GetKeyLootlabs.TextColor3 = Color3.fromRGB(230, 230, 230)
    GetKeyLootlabs.TextSize = 14

    local UICorner_Get2 = Instance.new("UICorner")
    UICorner_Get2.CornerRadius = UDim.new(0, 10)
    UICorner_Get2.Parent = GetKeyLootlabs

    local allElements = {MainFrame, Title, KeyInput, SubmitButton, Divider, GetKeyLinkvertise, GetKeyLootlabs, UIStroke_Main, UIStroke_Input}
    for _, elem in ipairs(allElements) do
        if elem:IsA("Frame") or elem:IsA("TextButton") or elem:IsA("TextBox") then
            elem.BackgroundTransparency = 1
        end
        if elem:IsA("TextLabel") or elem:IsA("TextButton") or elem:IsA("TextBox") then
            elem.TextTransparency = 1
        end
        if elem:IsA("UIStroke") then
            elem.Transparency = 1
        end
    end
    
    local tweenInfoIn = TweenInfo.new(0.5, Enum.EasingStyle.Linear)
    for _, elem in ipairs(allElements) do
        if elem:IsA("Frame") or elem:IsA("TextButton") or elem:IsA("TextBox") then
            TweenService:Create(elem, tweenInfoIn, {BackgroundTransparency = (elem == MainFrame and 0 or (elem == Divider and 0.5 or 0)) }):Play()
        end
        if elem:IsA("TextLabel") or elem:IsA("TextButton") or elem:IsA("TextBox") then
            TweenService:Create(elem, tweenInfoIn, {TextTransparency = 0}):Play()
        end
        if elem:IsA("UIStroke") then
            TweenService:Create(elem, tweenInfoIn, {Transparency = 0}):Play()
        end
    end

    local function destroyUI()
        local tweenInfoOut = TweenInfo.new(0.4, Enum.EasingStyle.Linear)
        for _, elem in ipairs(allElements) do
            if elem:IsA("Frame") or elem:IsA("TextButton") or elem:IsA("TextBox") then
                TweenService:Create(elem, tweenInfoOut, {BackgroundTransparency = 1}):Play()
            end
            if elem:IsA("TextLabel") or elem:IsA("TextButton") or elem:IsA("TextBox") then
                TweenService:Create(elem, tweenInfoOut, {TextTransparency = 1}):Play()
            end
            if elem:IsA("UIStroke") then
                TweenService:Create(elem, tweenInfoOut, {Transparency = 1}):Play()
            end
        end
        task.wait(0.4)
        KeySystemUI:Destroy()
    end
    
    task.spawn(function()
        local color1 = Color3.fromRGB(200, 200, 200)
        local color2 = Color3.fromRGB(40, 40, 40)
        local speed = 0.8

        while KeySystemUI.Parent do
            local alpha = (math.sin(os.clock() * speed) + 1) / 2
            local newColor = color1:Lerp(color2, alpha)
            
            if UIStroke_Main.Parent then
                UIStroke_Main.Color = newColor
            else
                break
            end
            task.wait()
        end
    end)

    SubmitButton.MouseButton1Click:Connect(function()
        if buttonCooldown then return end
        buttonCooldown = true
        local key = KeyInput.Text
        if key == "" then
            showUINotification("Please enter a key first.", true)
            task.delay(2, function() buttonCooldown = false end)
            return
        end
        local isValid = false
        for _, config in pairs(keyServices) do
            if verifyKey(key, config) then
                isValid = true
                break
            end
        end
        if isValid then
            showUINotification("Key is valid! Loading...", false)
            saveKey(key)
            task.wait(2)
            destroyUI()
            task.wait(0.1)
            loadHubScript()
        else
            showUINotification("Invalid Key. Please try again.", true)
            KeyInput.Text = ""
            task.delay(2, function() buttonCooldown = false end)
        end
    end)

    GetKeyLinkvertise.MouseButton1Click:Connect(function()
        if buttonCooldown then return end
        buttonCooldown = true
        copyLink(keyServices.Linkvertise)
        task.delay(2, function() buttonCooldown = false end)
    end)

    GetKeyLootlabs.MouseButton1Click:Connect(function()
        if buttonCooldown then return end
        buttonCooldown = true
        copyLink(keyServices.Lootlabs)
        task.delay(2, function() buttonCooldown = false end)
    end)
end

--====================================================================================================================--
--[ Main Script Logic ]
--====================================================================================================================--

local function verifySavedKey()
    if not readfile or not isfile or not isfile(keyPath) then return false end
    local savedKey = readfile(keyPath):gsub("%s+", "")
    if savedKey == "" then return false end
    for _, config in pairs(keyServices) do
        if verifyKey(savedKey, config) then
            return true
        end
    end
    return false
end

loadingManager:SetStatus("Verifying...")
local progress = loadingManager:RunProgressBar(1)
progress.Completed:Wait()

if verifySavedKey() then
    loadingManager:SetStatus("Success!")
    task.wait(0.5)
    loadingManager:Destroy()
    loadHubScript()
else
    loadingManager:Destroy()
    createKeySystemUI()
end
